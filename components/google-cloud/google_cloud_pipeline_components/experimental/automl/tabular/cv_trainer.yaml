name: AutoML Tabular CV Trainer
inputs:
- {name: project, type: String}
- {name: location, type: String}
- {name: image_uri, type: String, default: "us-docker.pkg.dev/vertex-ai-restricted/automl-tabular/training:prod"}
- {name: root_dir, type: String}
- {name: worker_pool_specs_override, type: String, default: ""}
- {name: deadline_hours, type: Float}
- {name: num_parallel_trials, type: Integer}
- {name: single_run_max_secs, type: Integer}
- {name: num_selected_trials, type: Integer}
- {name: transform_output, type: TransformOutput}
- {name: metadata, type: TabularExampleGenMetadata}
- {name: materialized_cv_splits, type: MaterializedSplit}
- {name: tuning_result_input, type: AutoMLTabularTuningResult}
- {name: encryption_spec_key_name, type: String, default: ""}

outputs:
- {name: gcp_resources, type: String}
- {name: tuning_result_output, type: AutoMLTabularTuningResult}

implementation:
  container:
    image: gcr.io/ml-pipeline/google-cloud-pipeline-components:0.1.7
    command: [python3, -u, -m, google_cloud_pipeline_components.experimental.remote.gcp_launcher.launcher]
    args: [
      --type, CustomJob,
      --project, {inputValue: project},
      --location, {inputValue: location},
      --gcp_resources, {outputPath: gcp_resources},
      --payload,
      concat: [
        '{"display_name": "automl-tabular-cv-tuner-{{$.pipeline_job_uuid}}-{{$.pipeline_task_uuid}}", "encryption_spec": {"kms_key_name":"',
        {inputValue: encryption_spec_key_name},
        '"}, "job_spec": {"worker_pool_specs": [{"replica_count": 1, "machine_spec": {"machine_type": "n1-standard-8"}, "container_spec": {"image_uri":"',
        {inputValue: image_uri},
        '", "args": ["l2l_cv_tuner", "--transform_output_path=',
        {inputUri: transform_output},
        '", "--training_docker_uri=',
        {inputValue: image_uri},
        '", "--component_id={{$.pipeline_task_uuid}}", "--training_base_dir=',
        {inputValue: root_dir},
        '/{{$.pipeline_job_uuid}}/{{$.pipeline_task_uuid}}/train", "--worker_pool_specs_override=',
        {inputValue: worker_pool_specs_override},
        '", "--num_parallel_trial=',
        {inputValue: num_parallel_trials},
        '", "--single_run_max_secs=',
        {inputValue: single_run_max_secs},
        '", "--deadline_hours=',
        {inputValue: deadline_hours},
        '", "--valid_trials_completed_threshold=0.7", "--num_selected_trials=',
        {inputValue: num_selected_trials},
        '", "--lro_job_info=',
        {inputValue: root_dir},
        '/{{$.pipeline_job_uuid}}/lro", "--error_file_path=',
        {inputValue: root_dir},
        '/{{$.pipeline_job_uuid}}/{{$.pipeline_task_uuid}}/error.pb", "--metadata_path=',
        {inputUri: metadata},
        '", "--materialized_cv_splits=',
        {inputUri: materialized_cv_splits},
        '", "--tuning_result_input_path=',
        {inputUri: tuning_result_input},
        '", "--tuning_result_output_path=',
        {outputUri: tuning_result_output},
        '", "--kms_key_name=',
        {inputValue: encryption_spec_key_name},
        '", "--use_custom_job=true", "--use_json=true", "--log_level=ERROR"]}}]}}'
      ]]
